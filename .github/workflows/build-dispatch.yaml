name: Build

on:
  workflow_call:
    inputs:
      host-platform:
        description: "Host platform for the build to take place."
        required: true
        type: string
      target-platform:
        description: "Target platform for which to build. If set no other platforms will be initialized."
        required: false
        default: 'all'
        type: string
      targets:
        description: "Targets to be build. (separated by spaces)"
        required: true
        type: string
      clang-version:
        description: "Clang tools version to be installed"
        required: false
        type: string

jobs:
  build:
    name: Build (${{ inputs.targets }})
    runs-on: ${{ inputs.host-platform }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup Clang ${{ inputs.clang-version }} (ubuntu-only)
        if: ${{ inputs.host-platform == 'ubuntu-latest' && inputs.clang-version != '' }}
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ inputs.clang-version }}
          sudo apt install libc++-${{ inputs.clang-version }}-dev libc++abi-${{ inputs.clang-version }}-dev

      - name: Setup Conan2
        uses: iceshard-engine/.github/.github/actions/conan2@main
        with:
          conan-cache: true
          conan-cache-version: 'v1-${{ inputs.target-platform }}'
          conan-config-url: https://github.com/iceshard-engine/conan-config.git
          conan-modify-profile: ${{ contains(inputs.host-platform, 'ubuntu') }}
          conan-profile-compiler: 'clang'
          conan-profile-compiler-version: '${{ inputs.clang-version }}'
          conan-profile-cppstd: '20'
          conan-profile-libcxx: 'libc++'

      - name: Setup IBT
        uses: iceshard-engine/.github/.github/actions/ibt-wks@main
        with:
          script_basename: 'ice'
          target-platform: ${{ inputs.target-platform }}
          workspace-cache: true
          workspace-cache-version: 'v1-${{ inputs.target-platform }}'

      # Building the actual target
      - name: Build Targets (${{ inputs.targets }})
        shell: pwsh
        run: ./ibt-ci build ${{ inputs.targets }}
