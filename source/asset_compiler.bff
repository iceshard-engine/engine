

.PlatformRule_GameAssets_ShadersMobile =
[
    .Name = 'Assets-Shaders-Mobile'
    .Requires = { 'assets-mobile', 'Step-Bake-Shaders' }
    .BuildOptions = {
        '-c shader_tools.dll'
        '--param shader:target GLSL'
    }
]

.PlatformRule_GameAssets_ShadersWeb =
[
    .Name = 'Assets-Shaders-Web'
    .Requires = { 'assets-web', 'Step-Bake-Shaders' }
    .BuildOptions = {
        '-c shader_tools.dll'
        '--param shader:target WGSL'
    }
]

.Platform_GameAssets =
[
    .PlatformSystem = 'GameAssets'
    .PlatformSupportedFlavours = { }
    .PlatformSupportedArchitectures = { 'assets-pc', 'assets-mobile', 'assets-web' }
    .PlatformSupportedToolchainFamilies = { 'isac' }

    .PlatformRequiredSDKs = { }
    .PlatformRules = {
        .PlatformRule_GameAssets_ShadersMobile
        .PlatformRule_GameAssets_ShadersWeb
    }

    .PlatformExtensions =
    [
        .OutputPrefix_SharedLib = ''
        .OutputPrefix_StaticLib = ''

        .OutputExtension_StaticLib = '.hsc'
        .OutputExtension_SharedLib = ''
        .OutputExtension_ConsoleApp = ''
        .OutputExtension_WindowedApp = ''
        .OutputExtension_HeaderOnly = ''
        .OutputExtension_ObjectList = '.isr'
    ]
]

.CompilerFrontend_ISAC =
[
    .FrontendFlag_Defines =
    [
        .FlagVariable = 'IgnoredOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]
    .FrontendFlag_IncludeDirs =
    [
        .FlagVariable = 'CompilerOptions'
        .FlagPrefix = '-i"'
        .FlagSuffix = '"'
    ]
    .FrontendFlag_IncludeResDirs =
    [
        .FlagVariable = 'IgnoredOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]
    .FrontendFlag_BuildOptions =
    [
        .FlagVariable = 'CompilerOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]
    .FrontendFlag_Libs =
    [
        .FlagVariable = 'IgnoredOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]
    .FrontendFlag_LibDirs =
    [
        .FlagVariable = 'IgnoredOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]
    .FrontendFlag_LinkOptions =
    [
        .FlagVariable = 'IgnoredOptions'
        .FlagPrefix = ''
        .FlagSuffix = ''
    ]

    .FrontendProperties =
    [
        .CompilerOptions + ' %1 -o %2'
        .LinkerOptions + ' '
        .LibrarianOptions + ' %1 -o %2'
    ]
]


.PlatformList + {
    .Platform_GameAssets
}
.PlatformNames + {
    'GameAssets'
}

.Toolchain_IS_AssetCompiler =
[

    .ToolchainCompilerFamily = 'isac'
    .ToolchainSupportedArchitectures = {
        'assets-pc'
        'assets-mobile'
        'assets-web'
    }
    .ToolchainToolset = 'local'
    .ToolchainFrontend = 'ISAC'
    .ToolchainCompiler = 'isac-compiler'
    .ToolchainLibrarian = 'hscp-librarian'
    .ToolchainLinker = ''
    .ToolchainIncludeDirs = {
    }
    .ToolchainLibDirs = {
    }
    .ToolchainLibs = {
    }

]

.ToolchainList + {
    .Toolchain_IS_AssetCompiler
}
.ToolchainNames + {
    'isac-local'
}


.Task_Assets_ShadersASL =
[
    .Step = 'Bake-Shaders'
    .Type = 'Compile'

    .AllowUnityBuilds = false
    .TaskInputPattern = { '*-vert.asl', '*-frag.asl' }

    .CompilerOutputExtension = '.isr'
]

.Task_Assets_ShadersGLSL =
[
    .Step = 'Bake-Shaders'
    .Type = 'Compile'

    .AllowUnityBuilds = false
    .TaskInputPattern = { '*-vert.glsl', '*-frag.glsl' }

    .CompilerOutputExtension = '.isr'
]

.Task_Assets_AssetPack =
[
    .LibrarianAllowResponseFile = true
    .LibrarianForceResponseFile = true

    .Step = 'Bundle'
    .Type = 'Link'
]

.AssetConfig_Develop =
[
    .ConfigurationName = 'Develop'
]
.AssetConfig_Release =
[
    .ConfigurationName = 'Release'
]

.Pipeline_AssetCompiler_2407 =
[
    .PipelineName = 'isac'
    .PipelinePlatform = 'GameAssets'
    .PipelineArchitecture = 'assets-pc'
    .PipelineToolchain = 'isac-local'

    .PipelineAllowUnityBuilds = false
    .PipelineRequirements = { }
    .PipelineProjectRequirements = { 'AssetPipeline' }
    .PipelineSteps = { 'Bake-Shaders', 'Bundle' }

    .PipelineTasks = {
        .Task_Assets_AssetPack
    }

    ; Will override the default configurations assigned to Vulkan Shaders
    .ConfigurationList = {
        .AssetConfig_Develop
        .AssetConfig_Release
    }

    .PipelineVSInfo =
    [
        .VSEnabled = false
    ]
]
