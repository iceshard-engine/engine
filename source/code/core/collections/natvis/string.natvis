<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <!-- Native Visualization for the core::String<> type -->
  <Type Name="ice::HeapString&lt;*&gt;">
    <DisplayString>HeapString {{ { _data,s8 } }}</DisplayString>
    <StringView>_data,s8</StringView>
    <Expand>
      <Item Name="[value]">_data,s8b</Item>
      <Item Name="[size]">_size</Item>
      <Item Name="[capacity]">_capacity</Item>
      <Item Name="[allocator]">_allocator</Item>
    </Expand>
  </Type>
  <Type Name="ice::HeapString&lt;wchar_t&gt;">
    <DisplayString>HeapString (wchar_t) {{ { _data,su } }}</DisplayString>
    <StringView>_data,su</StringView>
    <Expand>
      <Item Name="[value]">_data,sub</Item>
      <Item Name="[size]">_size</Item>
      <Item Name="[capacity]">_capacity</Item>
      <Item Name="[allocator]">_allocator</Item>
    </Expand>
  </Type>

  <!-- Native Visualization for the core::StackString<> type -->
  <Type Name="ice::StaticString&lt;*,*&gt;">
    <DisplayString>StaticString&lt;{"$T1",sb}&gt; {{ { _data,s8 } }}</DisplayString>
    <StringView>_data,s8</StringView>
    <Expand>
      <Item Name="[size]">_size</Item>
      <Item Name="[value]">_data,s8</Item>
      <Item Name="[capacity]">$T1</Item>
    </Expand>
  </Type>
  <Type Name="ice::StaticString&lt;*,wchar_t&gt;">
    <DisplayString>StaticString&lt;{"$T1",sb}&gt; {{ { _data,su } }}</DisplayString>
    <StringView>_data,su</StringView>
    <Expand>
      <Item Name="[size]">_size</Item>
      <Item Name="[value]">_data,sub</Item>
      <Item Name="[capacity]">$T1</Item>
    </Expand>
  </Type>

  <!-- Native Visualization for the ice::VarString types -->
  <Type Name="ice::HeapVarString&lt;*&gt;">
    <DisplayString>HeapVarString {{ { varstr_text(_data),[varstr_size(_data)]s8 } }}</DisplayString>
    <StringView>varstr_text(_data),s8</StringView>
    <Expand>
      <Item Name="[size_bytes]">varstr_bytes(_data)</Item>
      <Item Name="[size]">varstr_size(_data)</Item>
      <Item Name="[value]">varstr_text(_data),[varstr_size(_data)]s8b</Item>
      <Item Name="[allocator]">*_allocator</Item>
    </Expand>
  </Type>

  <Type Name="ice::VarStringBase&lt;*&gt;">
    <DisplayString>VarString {{ { varstr_text(_data),[varstr_size(_data)]s8 } }}</DisplayString>
    <StringView>varstr_text(_data),s8</StringView>
    <Expand>
      <Item Name="[size_bytes]">varstr_bytes(_data)</Item>
      <Item Name="[size]">varstr_size(_data)</Item>
      <Item Name="[value]">varstr_text(_data),[varstr_size(_data)]s8b</Item>
    </Expand>
  </Type>

  <!-- Native Visualization for the ice::String types -->
  <Type Name="ice::BasicString&lt;*&gt;">
    <DisplayString>String {{ { _data,[_size]s8 } }}</DisplayString>
    <StringView>_data,[_size]s8</StringView>
    <Expand>
      <Item Name="[size]">_size</Item>
      <Item Name="[value]">_data,[_size]s8b</Item>
    </Expand>
  </Type>
  <Type Name="ice::BasicString&lt;wchar_t&gt;">
    <DisplayString>String {{ { _data,[_size]su } }}</DisplayString>
    <StringView>_data,[_size]</StringView>
    <Expand>
      <Item Name="[size]">_size</Item>
      <Item Name="[value]">_data,[_size]sub</Item>
    </Expand>
  </Type>

  <!-- Helper Intrinsics -->
  <Intrinsic Name="varstr_size3" Expression="next ? (*str &amp; 0x7f) : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_size2" Expression="next ? (*str &amp; 0x7f) + varstr_size3(str + 1, *str &amp; 0x80) : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_size1" Expression="next ? (*str &amp; 0x7f) + varstr_size2(str + 1, *str &amp; 0x80) : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_size" Expression="(*str &amp; 0x7f) + varstr_size1(str + 1, *str &amp; 0x80)">
    <Parameter Name="str" Type="const char*" />
  </Intrinsic>

  <Intrinsic Name="varstr_bytes3" Expression="next ? 1 : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_bytes2" Expression="next ? 1 + varstr_size3(str + 1, *str &amp; 0x80) : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_bytes1" Expression="next ? 1 + varstr_size2(str + 1, *str &amp; 0x80) : 0">
    <Parameter Name="str" Type="const char*" />
    <Parameter Name="next" Type="int" />
  </Intrinsic>
  <Intrinsic Name="varstr_bytes" Expression="1 + varstr_size1(str + 1, *str &amp; 0x80)">
    <Parameter Name="str" Type="const char*" />
  </Intrinsic>

  <Intrinsic Name="varstr_text" Expression="str+varstr_bytes(str)">
    <Parameter Name="str" Type="const char*" />
  </Intrinsic>

</AutoVisualizer>
